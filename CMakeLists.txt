CMAKE_MINIMUM_REQUIRED (VERSION 3.11)
PROJECT (amule)

ADD_COMPILE_DEFINITIONS ("HAVE_CONFIG_H")

INCLUDE_DIRECTORIES (${CMAKE_BINARY_DIR})

SET (MIN_BOOST_VERSION 1.47)
SET (MIN_GDLIB_VERSION 2.0.0)
SET (MIN_UPNP_VERSION 1.6.6)
SET (MIN_WX_VERSION 2.8.12)
SET (PACKAGE "amule")
SET (PACKAGE_BUGREPORT "admin@amule.org")
SET (PACKAGE_NAME "aMule")
SET (PACKAGE_STRING "aMule SVN")
SET (PACKAGE_TARNAME "amule")
SET (PACKAGE_URL \"\")
SET (PACKAGE_VERSION "SVN")
SET (VERSION "GIT")
SET (DEFAULT_BUILD_TYPE "Release")
SET (RECONF_COMMAND ${CMAKE_COMMAND})

IF (EXISTS "${CMAKE_SOURCE_DIR}/.git")
	SET (DEFAULT_BUILD_TYPE "Debug")
ENDIF (EXISTS "${CMAKE_SOURCE_DIR}/.git")

# Set the possible values of build type for cmake-gui
SET_PROPERTY (CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
	"Debug" "Release"
)

IF (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
	MESSAGE (STATUS "Setting build type to '${DEFAULT_BUILD_TYPE}' as none was specified.")
	SET (CMAKE_BUILD_TYPE "${DEFAULT_BUILD_TYPE}" CACHE
		STRING "Choose the type of build." FORCE
	)

ENDIF (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)

CMAKE_POLICY (SET CMP0056 NEW)
CMAKE_POLICY (SET CMP0066 NEW)
CMAKE_POLICY (SET CMP0074 NEW)
CMAKE_POLICY (SET CMP0075 NEW)

INCLUDE (cmake/manpage_install.cmake)
INCLUDE (cmake/options.cmake)
INCLUDE (cmake/search-dirs.cmake)

IF (BUILD_AMULECMD OR BUILD_WEBSERVER)
	INCLUDE (cmake/FindReadline.cmake)
ENDIF (BUILD_AMULECMD OR BUILD_WEBSERVER)

IF (BUILD_CAS)
	INCLUDE (cmake/gdlib.cmake)
	INCLUDE (cmake/getopt_long.cmake)
ENDIF (BUILD_CAS)

IF (BUILD_PLASMAMULE)
	FIND_PACKAGE (Qt4 COMPONENTS QtCore QtGUI REQUIRED)
ENDIF (BUILD_PLASMAMULE)

IF (BUILD_WEBSERVER OR NEED_ZLIB)
	INCLUDE (cmake/zlib.cmake)
ENDIF (BUILD_WEBSERVER OR NEED_ZLIB)

IF (BUILD_WEBSERVER)
	INCLUDE (cmake/png.cmake)
ENDIF (BUILD_WEBSERVER)

IF (BUILD_WEBSERVER OR NEED_LIB_MULEAPPCORE)
	INCLUDE (cmake/bison_flex.cmake)
ENDIF (BUILD_WEBSERVER OR NEED_LIB_MULEAPPCORE)

IF (ENABLE_BOOST)
	INCLUDE (cmake/boost.cmake)
ENDIF (ENABLE_BOOST)

IF (ENABLE_IP2COUNTRY)
	INCLUDE (cmake/ip2country.cmake)
ENDIF (ENABLE_IP2COUNTRY)

IF (ENABLE_NLS)
	INCLUDE (cmake/nls.cmake)
ENDIF (ENABLE_NLS)

IF (ENABLE_UPNP)
	INCLUDE (cmake/upnp.cmake)
ENDIF (ENABLE_UPNP)

IF (NEED_GLIB_CHECK)
	INCLUDE (cmake/glib21.cmake)
ENDIF (NEED_GLIB_CHECK)

IF (NEED_LIB_CRYPTO)
	FIND_PACKAGE (OpenSSL REQUIRED)
ENDIF (NEED_LIB_CRYPTO)

IF (wx_NEEDED)
	INCLUDE (cmake/wx.cmake)
ENDIF (wx_NEEDED)

IF (NOT SVNDATE)
	FIND_PACKAGE (Git)

	IF (GIT_FOUND)
		EXECUTE_PROCESS (
			COMMAND ${GIT_EXECUTABLE} describe
			OUTPUT_VARIABLE GIT_INFO_WC_REVISION
			OUTPUT_STRIP_TRAILING_WHITESPACE
			WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
	ENDIF (GIT_FOUND)

	SET (SVNDATE "rev. ${GIT_INFO_WC_REVISION}" CACHE STRING "Revision to be written to version string" FORCE)
	MESSAGE (STATUS "git revision ${SVNDATE} found")
ENDIF (NOT SVNDATE)

INCLUDE (cmake/bfd.cmake)

CONFIGURE_FILE (
	config.h.cm
	config.h
)

IF (WIN32)
	CONFIGURE_FILE (
		version.rc.in
		version.rc
	)
ENDIF (WIN32)

IF (BUILD_MONOLITHIC)
	INSTALL (FILES amule.desktop
		DESTINATION "${CMAKE_INSTALL_DATADIR}/applications"
	)
ENDIF (BUILD_MONOLITHIC)

IF (BUILD_REMOTEGUI)
	INSTALL (FILES amulegui.desktop
		DESTINATION "${CMAKE_INSTALL_DATADIR}/applications"
	)
ENDIF (BUILD_REMOTEGUI)

IF (NOT EXTERNAL_DEPS)
	ADD_SUBDIRECTORY (docs)
	ADD_SUBDIRECTORY (src)

	IF (BUILD_TESTING)
		ADD_SUBDIRECTORY (unittests EXCLUDE_FROM_ALL)
		ENABLE_TESTING()

		ADD_CUSTOM_TARGET (check
			COMMAND ${CMAKE_CTEST_COMMAND}
			DEPENDS CTagTest
			CUInt128Test
			FileDataIOTest
			FormatTest
			NetworkFunctionsTest
			PathTest
			RangeMapTest
			StringFunctionsTest
			TextFileTest
		)

		ADD_TEST (NAME CTagTest
			COMMAND CTagTest
		)

		ADD_TEST (NAME CUInt128Test
			COMMAND CUInt128Test
		)

		ADD_TEST (NAME FileDataIOTest
			COMMAND FileDataIOTest
		)

		ADD_TEST (NAME FormatTest
			COMMAND FormatTest
		)

		ADD_TEST (NAME NetworkFunctionsTest
			COMMAND NetworkFunctionsTest
		)

		ADD_TEST (NAME PathTest
			COMMAND PathTest
		)

		ADD_TEST (NAME RangeMapTest
			COMMAND RangeMapTest
		)

		ADD_TEST (NAME StringFunctionsTest
			COMMAND StringFunctionsTest
		)

		ADD_TEST (NAME TextFileTest
			COMMAND TextFileTest
		)
	ENDIF (BUILD_TESTING)
ENDIF (NOT EXTERNAL_DEPS)

IF (DOWNLOAD_AND_BUILD_DEPS AND EXTERNAL_DEPS)
	SET (RECONF_COMMAND ${RECONF_COMMAND} -DCMAKE_BUILD_TYPE=$<CONFIG> ${amule_SOURCE_DIR})

	ADD_CUSTOM_COMMAND (OUTPUT reconf
		POST_BUILD
		COMMAND ${RECONF_COMMAND}
		COMMAND ${CMAKE_COMMAND} -E touch reconf
		COMMAND ${CMAKE_COMMAND} --build .
		DEPENDS ${EXTERNAL_DEPS}
		WORKING_DIRECTORY ${amule_BINARY_DIR}
	)

	ADD_CUSTOM_TARGET (DO_RECONF
		ALL
		DEPENDS reconf
	)
ENDIF (DOWNLOAD_AND_BUILD_DEPS AND EXTERNAL_DEPS)
