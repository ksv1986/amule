CMAKE_MINIMUM_REQUIRED (VERSION 2.8)
PROJECT (amule)

ADD_DEFINITIONS (-DHAVE_CONFIG_H)

INCLUDE_DIRECTORIES (${CMAKE_BINARY_DIR})

SET (MIN_BOOST_VERSION 1.47)
SET (MIN_GDLIB_VERSION 2.0.0)
SET (MIN_UPNP_VERSION 1.6.6)
SET (MIN_WX_VERSION 2.8.12)
SET (PACKAGE "amule")
SET (PACKAGE_BUGREPORT "admin@amule.org")
SET (PACKAGE_NAME "aMule")
SET (PACKAGE_STRING "aMule SVN")
SET (PACKAGE_TARNAME "amule")
SET (PACKAGE_URL \"\")
SET (PACKAGE_VERSION "SVN")
SET (VERSION "SVN")

SET (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

INCLUDE (cmake/manpage_install.cmake)
INCLUDE (cmake/options.cmake)
INCLUDE (cmake/search-dirs.cmake)

IF (BUILD_AMULECMD OR BUILD_WEBSERVER)
	INCLUDE (cmake/FindReadline.cmake)
ENDIF (BUILD_AMULECMD OR BUILD_WEBSERVER)

IF (BUILD_CAS)
	INCLUDE (cmake/getopt_long.cmake)
ENDIF (BUILD_CAS)

IF (BUILD_PLASMAMULE)
	FIND_PACKAGE (Qt4 COMPONENTS QtCore QtGUI REQUIRED)
ENDIF (BUILD_PLASMAMULE)

IF (BUILD_WEBSERVER OR NEED_ZLIB)
	INCLUDE (cmake/zlib.cmake)
ENDIF (BUILD_WEBSERVER OR NEED_ZLIB)

IF (BUILD_WEBSERVER)
	INCLUDE (cmake/png.cmake)
ENDIF (BUILD_WEBSERVER)

IF (BUILD_WEBSERVER OR NEED_LIB_MULEAPPCORE)
	INCLUDE (FindBISON)
	INCLUDE (FindFLEX)

	EXECUTE_PROCESS (COMMAND ${FLEX_EXECUTABLE} --help
		OUTPUT_VARIABLE FLEX_HELP)
	STRING (REGEX MATCH header-file FLEX_MATCH "${FLEX_HELP}")
ENDIF (BUILD_WEBSERVER OR NEED_LIB_MULEAPPCORE)

IF (ENABLE_BOOST)
	INCLUDE (cmake/boost.cmake)
ENDIF (ENABLE_BOOST)

IF (ENABLE_IP2COUNTRY)
	INCLUDE (cmake/ip2country.cmake)
ENDIF (ENABLE_IP2COUNTRY)

IF (ENABLE_NLS)
	INCLUDE (cmake/nls.cmake)
ENDIF (ENABLE_NLS)

IF (ENABLE_UPNP)
	INCLUDE (cmake/upnp.cmake)
ENDIF (ENABLE_UPNP)

IF (NEED_GLIB_CHECK)
	INCLUDE (cmake/glib21.cmake)
ENDIF (NEED_GLIB_CHECK)

IF (NEED_LIB_CRYPTO)
	FIND_PACKAGE (OpenSSL REQUIRED)
ENDIF (NEED_LIB_CRYPTO)

IF (wx_NEEDED)
	INCLUDE (cmake/wx.cmake)
	CHECK_WX()
ENDIF (wx_NEEDED)

IF (EXISTS "${CMAKE_SOURCE_DIR}/.svn-revision")
	FILE (READ ${CMAKE_SOURCE_DIR}/.svn-revision SVNREV)
	STRING (REGEX REPLACE "(\r?\n)+$" "" SVNREV "${SVNREV}")
	SET (SVNDATE "rev. ${SVNREV}")
ELSE (EXISTS "${CMAKE_SOURCE_DIR}/.svn-revision")
	FIND_PACKAGE (Git)

	IF (GIT_FOUND)
		EXECUTE_PROCESS (
			COMMAND ${GIT_EXECUTABLE} describe
			OUTPUT_VARIABLE SVN_INFO_WC_REVISION
			OUTPUT_STRIP_TRAILING_WHITESPACE
			WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
	ENDIF (GIT_FOUND)

	SET (SVNDATE "rev. ${SVN_INFO_WC_REVISION}")
ENDIF (EXISTS "${CMAKE_SOURCE_DIR}/.svn-revision")

INCLUDE (cmake/bfd.cmake)

MESSAGE (STATUS "SVN Revision ${SVNDATE} found")

CONFIGURE_FILE (
	config.h.cm
	config.h
)

IF (WIN32)
	CONFIGURE_FILE (
		version.rc.in
		version.rc
	)
ENDIF (WIN32)

IF (BUILD_MONOLITHIC)
	INSTALL (FILES amule.desktop
		DESTINATION "${DATADIR}/applications"
	)
ENDIF (BUILD_MONOLITHIC)

IF (BUILD_REMOTEGUI)
	INSTALL (FILES amulegui.desktop
		DESTINATION "${DATADIR}/applications"
	)
ENDIF (BUILD_REMOTEGUI)

ADD_SUBDIRECTORY (docs)
ADD_SUBDIRECTORY (src)
